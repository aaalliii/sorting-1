// some simple sorting algorithm by aaalliii
#ifdef ONLINE_JUDGE
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#endif
#include <bits/stdc++.h>
#include <complex>
#include <queue>
#include <set>
#include <unordered_set>
#include <list>
#include <chrono>
#include <random>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <map>
#include <unordered_map>
#include <stack>
#include <iomanip>
#include <fstream>
using namespace std;
#define speed ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(nullptr);
typedef long long ll;
#define uns unsigned
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define ln "\n"
#define dbg(x) cout << #x << " = " << x << ln
#define sz(x) (int)x.size()
#define all(x) x.begin(), x.end()
void imp()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
}

int a[100005];
int n;

void input()
{
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }
}
void output()
{
    cout << '\n';
    for (int i = 0; i < n; i++)
    {
        cout << a[i] << " ";
    }
}
void sort()
{
    for (int gap = n / 2; gap > 0; gap /= 2)
    {
        for (int i = gap; i < n; i += 1)
        {
            int smth = a[i];
            int j;
            for (j = i; j >= gap && a[j - gap] > smth; j -= gap)
                a[j] = a[j - gap];
            a[j] = smth;
        }
    }
}
int main()
{
    speed;
    // imp();
    cin >> n;
    input();
    sort();
    output();
}
